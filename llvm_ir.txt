declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putchar(i32)
declare void @putstr(i8*)

@a = dso_local global i32 0
@b = dso_local global i32 0

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define dso_local i32 @main() {
	store i32 1, i32* @b
	%var2 = call i32 @getint()
	store i32 %var2, i32* @a
	%var3 = add nsw i32 1, 2
	%var4 = add nsw i32 %var3, 3
	%var5 = icmp eq i32 0, %var4
	%var6 = zext i1 %var5 to i32
	%var7 = icmp ne i32 %var6, 0
	br i1 %var7, label %Label2, label %Label1

Label2:
	store i32 0, i32* @b
	br label %Label1

Label1:
	%var9 = load i32, i32* @b
	call void @putint(i32 %var9)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
	ret i32 0
}
