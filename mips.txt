.data
pvtstr0: .asciiz "\n\00"
pvtstr1: .asciiz "\n\00"

.text
.globl main
    jal main
    j end

test:
entry_test:    
# %var2 = alloca i8*
    addi $k0, $sp, -8
    sw $k0, -12($sp)
    
# store i8* %var1, i8** %var2
    lw $k0, -12($sp)
    lw $k1, -4($sp)
    sw $k1, 0($k0)
    
# %var3 = load i8*, i8** %var2
    lw $k0, -12($sp)
    lw $k0, 0($k0)
    sw $k0, -16($sp)
    
# %var4 = getelementptr inbounds i8, i8* %var3, i32 2
    lw $k0, -16($sp)
    addi $k0, $k0, 8
    sw $k0, -20($sp)
    
# store i8 108, i8* %var4
    lw $k0, -20($sp)
    li $k1, 108
    sw $k1, 0($k0)
    
# %var6 = load i8*, i8** %var2
    lw $k0, -12($sp)
    lw $k0, 0($k0)
    sw $k0, -24($sp)
    
# %var7 = getelementptr inbounds i8, i8* %var6, i32 3
    lw $k0, -24($sp)
    addi $k0, $k0, 12
    sw $k0, -28($sp)
    
# %var8 = load i8, i8* %var7
    lw $k0, -28($sp)
    lw $k0, 0($k0)
    sw $k0, -32($sp)
    
# %var9 = zext i8 %var8 to i32
    
# call void @putint(i32 %var9)
    li $v0, 1
    lw $a0, -32($sp)
    syscall
    
# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @pvtstr0, i64 0, i64 0))
    li $v0, 4
    la $a0, pvtstr0
    syscall
    
# ret void
    jr $ra

fun:
entry_fun:    
# %var2 = alloca i8*
    addi $k0, $sp, -8
    sw $k0, -12($sp)
    
# store i8* %var1, i8** %var2
    lw $k0, -12($sp)
    lw $k1, -4($sp)
    sw $k1, 0($k0)
    
# %var3 = load i8*, i8** %var2
    lw $k0, -12($sp)
    lw $k0, 0($k0)
    sw $k0, -16($sp)
    
# call void @test(i8* %var3)
    sw $sp, -20($sp)
    sw $ra, -24($sp)
    lw $k0, -16($sp)
    sw $k0, -28($sp)
    addi $sp, $sp, -24
    jal test
    lw $ra, 0($sp)
    lw $sp, 4($sp)
    
# %var4 = trunc i32 97 to i8
    li $k0, 97
    sw $k0, -20($sp)
    
# ret i8 %var4
    lw $v0, -20($sp)
    jr $ra

main:
entry_main:    
# %var1 = alloca [10 x i8]
    addi $k0, $sp, -40
    sw $k0, -44($sp)
    
# %var2 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 0
    lw $k0, -44($sp)
    sw $k0, -48($sp)
    
# store i8 97, i8* %var2
    lw $k0, -48($sp)
    li $k1, 97
    sw $k1, 0($k0)
    
# %var3 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 1
    lw $k0, -44($sp)
    addi $k0, $k0, 4
    sw $k0, -52($sp)
    
# store i8 98, i8* %var3
    lw $k0, -52($sp)
    li $k1, 98
    sw $k1, 0($k0)
    
# %var4 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 2
    lw $k0, -44($sp)
    addi $k0, $k0, 8
    sw $k0, -56($sp)
    
# store i8 99, i8* %var4
    lw $k0, -56($sp)
    li $k1, 99
    sw $k1, 0($k0)
    
# %var5 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 3
    lw $k0, -44($sp)
    addi $k0, $k0, 12
    sw $k0, -60($sp)
    
# store i8 100, i8* %var5
    lw $k0, -60($sp)
    li $k1, 100
    sw $k1, 0($k0)
    
# %var6 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 4
    lw $k0, -44($sp)
    addi $k0, $k0, 16
    sw $k0, -64($sp)
    
# store i8 101, i8* %var6
    lw $k0, -64($sp)
    li $k1, 101
    sw $k1, 0($k0)
    
# %var7 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 5
    lw $k0, -44($sp)
    addi $k0, $k0, 20
    sw $k0, -68($sp)
    
# store i8 102, i8* %var7
    lw $k0, -68($sp)
    li $k1, 102
    sw $k1, 0($k0)
    
# %var8 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 6
    lw $k0, -44($sp)
    addi $k0, $k0, 24
    sw $k0, -72($sp)
    
# store i8 103, i8* %var8
    lw $k0, -72($sp)
    li $k1, 103
    sw $k1, 0($k0)
    
# %var9 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 7
    lw $k0, -44($sp)
    addi $k0, $k0, 28
    sw $k0, -76($sp)
    
# store i8 0, i8* %var9
    lw $k0, -76($sp)
    li $k1, 0
    sw $k1, 0($k0)
    
# %var10 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 8
    lw $k0, -44($sp)
    addi $k0, $k0, 32
    sw $k0, -80($sp)
    
# store i8 0, i8* %var10
    lw $k0, -80($sp)
    li $k1, 0
    sw $k1, 0($k0)
    
# %var11 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 9
    lw $k0, -44($sp)
    addi $k0, $k0, 36
    sw $k0, -84($sp)
    
# store i8 0, i8* %var11
    lw $k0, -84($sp)
    li $k1, 0
    sw $k1, 0($k0)
    
# %var12 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 0
    lw $k0, -44($sp)
    sw $k0, -88($sp)
    
# %val13 = call i8 @fun(i8* %var12)
    sw $sp, -92($sp)
    sw $ra, -96($sp)
    lw $k0, -88($sp)
    sw $k0, -100($sp)
    addi $sp, $sp, -96
    jal fun
    lw $ra, 0($sp)
    lw $sp, 4($sp)
    sw $v0, -92($sp)
    
# %var14 = zext i8 %val13 to i32
    
# %var15 = getelementptr inbounds [10 x i8], [10 x i8]* %var1, i32 0, i32 2
    lw $k0, -44($sp)
    addi $k0, $k0, 8
    sw $k0, -96($sp)
    
# %var16 = load i8, i8* %var15
    lw $k0, -96($sp)
    lw $k0, 0($k0)
    sw $k0, -100($sp)
    
# %var17 = zext i8 %var16 to i32
    
# call void @putchar(i32 %var17)
    li $v0, 11
    lw $a0, -100($sp)
    syscall
    
# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @pvtstr1, i64 0, i64 0))
    li $v0, 4
    la $a0, pvtstr1
    syscall
    
# ret i32 0
    li $v0, 0
    jr $ra

end: