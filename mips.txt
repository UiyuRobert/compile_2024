.data
.align 2
GLN: .word 10
.align 2
GLa: .space 40
.align 2
GLb: .space 40
pvtstr0: .asciiz ", \00"


.text
    li $k0, 2
    sw $k0, GLa+8
    li $k0, 3
    sw $k0, GLa+12
    li $k0, 5
    sw $k0, GLa+20
    li $k0, 6
    sw $k0, GLa+24
    li $k0, 7
    sw $k0, GLa+28
    li $k0, 9
    sw $k0, GLa+36
    li $k0, 2
    sw $k0, GLb+8
    li $k0, 3
    sw $k0, GLb+12
    li $k0, 5
    sw $k0, GLb+20
    li $k0, 6
    sw $k0, GLb+24
    li $k0, 7
    sw $k0, GLb+28
    jal main
    j end

main:
entry_main:    
# %var1 = alloca i32
    addi $k0, $sp, -4
    sw $k0, -8($sp)
    
# store i32 2, i32* %var1
    lw $k0, -8($sp)
    li $k1, 2
    sw $k1, 0($k0)
    
# %var2 = alloca i32
    addi $k0, $sp, -12
    sw $k0, -16($sp)
    
# store i32 5, i32* %var2
    lw $k0, -16($sp)
    li $k1, 5
    sw $k1, 0($k0)
    
# %var3 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 0
    la $k0, GLa
    sw $k0, -20($sp)
    
# %var4 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 0
    la $k0, GLa
    sw $k0, -24($sp)
    
# %var5 = load i32, i32* %var4
    lw $k0, -24($sp)
    lw $k0, 0($k0)
    sw $k0, -28($sp)
    
# %var6 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -32($sp)
    
# %var7 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -36($sp)
    
# %var8 = mul nsw i32 %var6, %var7
    lw $k0, -32($sp)
    lw $k1, -36($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -40($sp)
    
# %var9 = add nsw i32 %var5, %var8
    lw $k0, -28($sp)
    lw $k1, -40($sp)
    addu $k0, $k0, $k1
    sw $k0, -44($sp)
    
# store i32 %var9, i32* %var3
    lw $k0, -20($sp)
    lw $k1, -44($sp)
    sw $k1, 0($k0)
    
# %var11 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 1
    la $k0, GLa
    addi $k0, $k0, 4
    sw $k0, -48($sp)
    
# %var12 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 1
    la $k0, GLa
    addi $k0, $k0, 4
    sw $k0, -52($sp)
    
# %var13 = load i32, i32* %var12
    lw $k0, -52($sp)
    lw $k0, 0($k0)
    sw $k0, -56($sp)
    
# %var14 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -60($sp)
    
# %var15 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -64($sp)
    
# %var16 = mul nsw i32 %var14, %var15
    lw $k0, -60($sp)
    lw $k1, -64($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -68($sp)
    
# %var17 = add nsw i32 %var13, %var16
    lw $k0, -56($sp)
    lw $k1, -68($sp)
    addu $k0, $k0, $k1
    sw $k0, -72($sp)
    
# store i32 %var17, i32* %var11
    lw $k0, -48($sp)
    lw $k1, -72($sp)
    sw $k1, 0($k0)
    
# %var19 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 2
    la $k0, GLa
    addi $k0, $k0, 8
    sw $k0, -76($sp)
    
# %var20 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 2
    la $k0, GLa
    addi $k0, $k0, 8
    sw $k0, -80($sp)
    
# %var21 = load i32, i32* %var20
    lw $k0, -80($sp)
    lw $k0, 0($k0)
    sw $k0, -84($sp)
    
# %var22 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -88($sp)
    
# %var23 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -92($sp)
    
# %var24 = mul nsw i32 %var22, %var23
    lw $k0, -88($sp)
    lw $k1, -92($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -96($sp)
    
# %var25 = add nsw i32 %var21, %var24
    lw $k0, -84($sp)
    lw $k1, -96($sp)
    addu $k0, $k0, $k1
    sw $k0, -100($sp)
    
# store i32 %var25, i32* %var19
    lw $k0, -76($sp)
    lw $k1, -100($sp)
    sw $k1, 0($k0)
    
# %var27 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 3
    la $k0, GLa
    addi $k0, $k0, 12
    sw $k0, -104($sp)
    
# %var28 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 3
    la $k0, GLa
    addi $k0, $k0, 12
    sw $k0, -108($sp)
    
# %var29 = load i32, i32* %var28
    lw $k0, -108($sp)
    lw $k0, 0($k0)
    sw $k0, -112($sp)
    
# %var30 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -116($sp)
    
# %var31 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -120($sp)
    
# %var32 = mul nsw i32 %var30, %var31
    lw $k0, -116($sp)
    lw $k1, -120($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -124($sp)
    
# %var33 = add nsw i32 %var29, %var32
    lw $k0, -112($sp)
    lw $k1, -124($sp)
    addu $k0, $k0, $k1
    sw $k0, -128($sp)
    
# store i32 %var33, i32* %var27
    lw $k0, -104($sp)
    lw $k1, -128($sp)
    sw $k1, 0($k0)
    
# %var35 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 4
    la $k0, GLa
    addi $k0, $k0, 16
    sw $k0, -132($sp)
    
# %var36 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 4
    la $k0, GLa
    addi $k0, $k0, 16
    sw $k0, -136($sp)
    
# %var37 = load i32, i32* %var36
    lw $k0, -136($sp)
    lw $k0, 0($k0)
    sw $k0, -140($sp)
    
# %var38 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -144($sp)
    
# %var39 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -148($sp)
    
# %var40 = mul nsw i32 %var38, %var39
    lw $k0, -144($sp)
    lw $k1, -148($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -152($sp)
    
# %var41 = add nsw i32 %var37, %var40
    lw $k0, -140($sp)
    lw $k1, -152($sp)
    addu $k0, $k0, $k1
    sw $k0, -156($sp)
    
# store i32 %var41, i32* %var35
    lw $k0, -132($sp)
    lw $k1, -156($sp)
    sw $k1, 0($k0)
    
# %var43 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 5
    la $k0, GLa
    addi $k0, $k0, 20
    sw $k0, -160($sp)
    
# %var44 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 5
    la $k0, GLa
    addi $k0, $k0, 20
    sw $k0, -164($sp)
    
# %var45 = load i32, i32* %var44
    lw $k0, -164($sp)
    lw $k0, 0($k0)
    sw $k0, -168($sp)
    
# %var46 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -172($sp)
    
# %var47 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -176($sp)
    
# %var48 = mul nsw i32 %var46, %var47
    lw $k0, -172($sp)
    lw $k1, -176($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -180($sp)
    
# %var49 = add nsw i32 %var45, %var48
    lw $k0, -168($sp)
    lw $k1, -180($sp)
    addu $k0, $k0, $k1
    sw $k0, -184($sp)
    
# store i32 %var49, i32* %var43
    lw $k0, -160($sp)
    lw $k1, -184($sp)
    sw $k1, 0($k0)
    
# %var51 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 6
    la $k0, GLa
    addi $k0, $k0, 24
    sw $k0, -188($sp)
    
# %var52 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 6
    la $k0, GLa
    addi $k0, $k0, 24
    sw $k0, -192($sp)
    
# %var53 = load i32, i32* %var52
    lw $k0, -192($sp)
    lw $k0, 0($k0)
    sw $k0, -196($sp)
    
# %var54 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -200($sp)
    
# %var55 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -204($sp)
    
# %var56 = mul nsw i32 %var54, %var55
    lw $k0, -200($sp)
    lw $k1, -204($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -208($sp)
    
# %var57 = add nsw i32 %var53, %var56
    lw $k0, -196($sp)
    lw $k1, -208($sp)
    addu $k0, $k0, $k1
    sw $k0, -212($sp)
    
# store i32 %var57, i32* %var51
    lw $k0, -188($sp)
    lw $k1, -212($sp)
    sw $k1, 0($k0)
    
# %var59 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 7
    la $k0, GLa
    addi $k0, $k0, 28
    sw $k0, -216($sp)
    
# %var60 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 7
    la $k0, GLa
    addi $k0, $k0, 28
    sw $k0, -220($sp)
    
# %var61 = load i32, i32* %var60
    lw $k0, -220($sp)
    lw $k0, 0($k0)
    sw $k0, -224($sp)
    
# %var62 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -228($sp)
    
# %var63 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -232($sp)
    
# %var64 = mul nsw i32 %var62, %var63
    lw $k0, -228($sp)
    lw $k1, -232($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -236($sp)
    
# %var65 = add nsw i32 %var61, %var64
    lw $k0, -224($sp)
    lw $k1, -236($sp)
    addu $k0, $k0, $k1
    sw $k0, -240($sp)
    
# store i32 %var65, i32* %var59
    lw $k0, -216($sp)
    lw $k1, -240($sp)
    sw $k1, 0($k0)
    
# %var67 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 8
    la $k0, GLa
    addi $k0, $k0, 32
    sw $k0, -244($sp)
    
# %var68 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 8
    la $k0, GLa
    addi $k0, $k0, 32
    sw $k0, -248($sp)
    
# %var69 = load i32, i32* %var68
    lw $k0, -248($sp)
    lw $k0, 0($k0)
    sw $k0, -252($sp)
    
# %var70 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -256($sp)
    
# %var71 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -260($sp)
    
# %var72 = mul nsw i32 %var70, %var71
    lw $k0, -256($sp)
    lw $k1, -260($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -264($sp)
    
# %var73 = add nsw i32 %var69, %var72
    lw $k0, -252($sp)
    lw $k1, -264($sp)
    addu $k0, $k0, $k1
    sw $k0, -268($sp)
    
# store i32 %var73, i32* %var67
    lw $k0, -244($sp)
    lw $k1, -268($sp)
    sw $k1, 0($k0)
    
# %var75 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 9
    la $k0, GLa
    addi $k0, $k0, 36
    sw $k0, -272($sp)
    
# %var76 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 9
    la $k0, GLa
    addi $k0, $k0, 36
    sw $k0, -276($sp)
    
# %var77 = load i32, i32* %var76
    lw $k0, -276($sp)
    lw $k0, 0($k0)
    sw $k0, -280($sp)
    
# %var78 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -284($sp)
    
# %var79 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -288($sp)
    
# %var80 = mul nsw i32 %var78, %var79
    lw $k0, -284($sp)
    lw $k1, -288($sp)
    mult $k0, $k1
    mflo $k0
    sw $k0, -292($sp)
    
# %var81 = add nsw i32 %var77, %var80
    lw $k0, -280($sp)
    lw $k1, -292($sp)
    addu $k0, $k0, $k1
    sw $k0, -296($sp)
    
# store i32 %var81, i32* %var75
    lw $k0, -272($sp)
    lw $k1, -296($sp)
    sw $k1, 0($k0)
    
# store i32 0, i32* %var1
    lw $k0, -8($sp)
    li $k1, 0
    sw $k1, 0($k0)
    
# br label %Label3
    j Label3

Label3:    
# %var84 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -300($sp)
    
# %var85 = icmp slt i32 %var84, 10
    lw $k0, -300($sp)
    li $k1, 10
    slt $k0, $k0, $k1
    sw $k0, -304($sp)
    
# br i1 %var85, label %Label5, label %Label2
    lw $k0, -304($sp)
    bne $k0, $zero, Label5
    j Label2

Label5:    
# %var86 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -308($sp)
    
# %var87 = getelementptr inbounds [10 x i32], [10 x i32]* @GLa, i32 0, i32 %var86
    la $k0, GLa
    lw $k1, -308($sp)
    sll $k1, $k1, 2
    addu $k0, $k0, $k1
    sw $k0, -312($sp)
    
# %var88 = load i32, i32* %var87
    lw $k0, -312($sp)
    lw $k0, 0($k0)
    sw $k0, -316($sp)
    
# call void @putint(i32 %var88)
    li $v0, 1
    lw $a0, -316($sp)
    syscall
    
# call void @putstr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @pvtstr0, i64 0, i64 0))
    li $v0, 4
    la $a0, pvtstr0
    syscall
    
# %var89 = load i32, i32* %var1
    lw $k0, -8($sp)
    lw $k0, 0($k0)
    sw $k0, -320($sp)
    
# %var90 = add nsw i32 %var89, 1
    lw $k0, -320($sp)
    li $k1, 1
    addu $k0, $k0, $k1
    sw $k0, -324($sp)
    
# store i32 %var90, i32* %var1
    lw $k0, -8($sp)
    lw $k1, -324($sp)
    sw $k1, 0($k0)
    
# br label %Label4
    j Label4

Label4:    
# br label %Label3
    j Label3

Label2:    
# ret i32 0
    li $v0, 0
    jr $ra

end: